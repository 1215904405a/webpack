1、子模块缓存
NamedChunksPlugin插件来根据文件名来稳定你的chunkid  webpack.NamedChunksPlugin  生产中用
// 使用模块名称作为chunkid,替换掉原本的使用递增id来作为chunkid导致的[新增entry模块,其他模块的hash发生抖动,导致客户端长效缓存失效]
config.plugins.push(new webpack.NamedChunksPlugin((chunk) => {
  // 解决异步模块打包的问题
  if (chunk.name) {
    return chunk.name;
  }
  return chunk.modules.map(m => path.relative(m.context, m.request)).join("_");
}));
[chunkhash]是根据文件内容生成的hash 单独生产hash  没变的不回有hash变化
[hash]会根据入口文件改变  所有文件hash都会变

2、webpack.HashedModuleIdsPlugin
该插件会根据模块的相对路径生成一个四位数的hash作为模块id,
入口文件顺序改变，保证chunkhash不会变

3、new webpack.optimize.CommonsChunkPlugin({ //防止公用模块hash改变 
      name: 'manifest',
   })
